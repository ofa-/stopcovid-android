/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * Authors
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Created by Lunabee Studio / Date - 2020/04/05 - for the TOUS-ANTI-COVID project
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'

android {
    defaultConfig {

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def props = new Properties()
    file("../versions.properties").withInputStream { props.load(it) }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${props.getProperty("version.com.google.protobuf..protobuf-javalite")}"
        }
        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    java {
                        option "lite"
                    }
                }
            }
        }
    }

    kotlinOptions.freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        disable "GradleDependency",
                "MissingBackupPin"
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    implementation "androidx.annotation:annotation:_"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:_"
    implementation 'androidx.preference:preference-ktx:_'
    api "androidx.room:room-ktx:_"
    kapt "androidx.room:room-compiler:_"


    implementation "com.squareup.okhttp3:logging-interceptor:_"
    implementation "com.squareup.okhttp3:okhttp-tls:_"
    implementation "com.squareup.retrofit2:converter-moshi:_"
    api "com.squareup.retrofit2:retrofit:_"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:_"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:_'

    implementation 'com.jakewharton.timber:timber:_'
    implementation 'com.google.code.gson:gson:_'

    implementation 'com.google.protobuf:protobuf-javalite:_'
    implementation 'org.bouncycastle:bcprov-jdk15to18:_'

    implementation 'commons-codec:commons-codec:_'
    implementation project(path: ':analytics')
    implementation project(path: ':domain')
    implementation project(path: ':robert')
    api project(path: ':ble')

    androidTestImplementation "androidx.test:runner:_"
    androidTestImplementation "androidx.test:rules:_"
    androidTestImplementation "androidx.test.ext:truth:_"
    androidTestImplementation "androidx.test.ext:junit:_"
    androidTestImplementation "androidx.room:room-testing:_"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:_"
    androidTestImplementation "org.apache.commons:commons-text:_"
    androidTestImplementation "io.mockk:mockk-android:_"
}
